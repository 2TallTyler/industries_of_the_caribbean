/* Begin Beach */

spriteset(spriteset_beach, "src/gfx/beach-tiles.png") {

    //SLOPE_SW	
    //left_x, upper_y, width, height, offset_x, offset_y
    [ 0,      0,       64,    26,     -31,        -3]
    [ 0,     40,       64,    23,     -31,         0]
    [ 0,     80,       64,    23,     -31,         0]

    //SLOPE_SE	
    //left_x, upper_y, width, height, offset_x, offset_y
    [ 65,     0,       64,    26,     -31,        -3]
    [ 65,    40,       64,    23,     -31,         0]
    [ 65,    80,       64,    23,     -31,         0]

    //SLOPE_NW	
    //left_x, upper_y, width, height, offset_x, offset_y
    [ 130,    0,       64,    39,     -31,        -8]
    [ 130,   40,       64,    39,     -31,        -8]
    [ 130,   80,       64,    39,     -31,        -8]

    //SLOPE_NE	
    //left_x, upper_y, width, height, offset_x, offset_y
    [ 195,    0,       64,    39,     -31,        -8]
    [ 195,   40,       64,    39,     -31,        -8]
    [ 195,   80,       64,    39,     -31,        -8]
}

spritelayout beach_sprite_SW_1 {
	ground {sprite: 3927 ;}
	building {
		sprite:	spriteset_beach(0);
	}
}

spritelayout beach_sprite_SW_2 {
	ground {sprite: 3927 ;}
	building {
		sprite:	spriteset_beach(1);
	}
}

spritelayout beach_sprite_SW_3 {
	ground {sprite: 3927 ;}
	building {
		sprite:	spriteset_beach(2);
	}
}

spritelayout beach_sprite_SE_1 {
	ground {sprite: 3930 ;}
	building {
		sprite:	spriteset_beach(3);
	}
}

spritelayout beach_sprite_SE_2 {
	ground {sprite: 3930 ;}
	building {
		sprite:	spriteset_beach(4);
	}
}

spritelayout beach_sprite_SE_3 {
	ground {sprite: 3930 ;}
	building {
		sprite:	spriteset_beach(5);
	}
}

spritelayout beach_sprite_NW_1 {
	ground {sprite: 3933 ;}
	building {
		sprite:	spriteset_beach(6);
	}
}

spritelayout beach_sprite_NW_2 {
	ground {sprite: 3933 ;}
	building {
		sprite:	spriteset_beach(7);
	}
}

spritelayout beach_sprite_NW_3 {
	ground {sprite: 3933 ;}
	building {
		sprite:	spriteset_beach(8);
	}
}

spritelayout beach_sprite_NE_1 {
	ground {
		sprite: 3936;
	}
	building {
		sprite:	spriteset_beach(9);
	}
}

spritelayout beach_sprite_NE_2 {
	ground {
		sprite: 3936;
	}
	building {
		sprite:	spriteset_beach(10);
	}
}

spritelayout beach_sprite_NE_3 {
	ground {
		sprite: 3936;
	}
	building {
		sprite:	spriteset_beach(11);
	}
}


/* Location Checks */

switch(FEAT_INDUSTRYTILES, SELF, beach_ocean_check, nearby_tile_water_class(0,0) == WATER_CLASS_SEA) { 1: return CB_RESULT_LOCATION_ALLOW; return CB_RESULT_LOCATION_DISALLOW; }
switch(FEAT_INDUSTRYTILES, SELF, beach_slope_NE_check, nearby_tile_slope(0,0) == SLOPE_NE) { 0: return CB_RESULT_LOCATION_DISALLOW; beach_ocean_check; }
switch(FEAT_INDUSTRYTILES, SELF, beach_slope_SE_check, nearby_tile_slope(0,0) == SLOPE_SE) { 0: return CB_RESULT_LOCATION_DISALLOW; beach_ocean_check; }
switch(FEAT_INDUSTRYTILES, SELF, beach_slope_NW_check, nearby_tile_slope(0,0) == SLOPE_NW) { 0: return CB_RESULT_LOCATION_DISALLOW; beach_ocean_check; }
switch(FEAT_INDUSTRYTILES, SELF, beach_slope_SW_check, nearby_tile_slope(0,0) == SLOPE_SW) { 0: return CB_RESULT_LOCATION_DISALLOW; beach_ocean_check; }

/* Industry Tile Layouts */

tilelayout beach_layout_NE_1 {
	0, 0: beach_tile_NE_1;
	0, 1: beach_tile_NE_2;
	0, 2: beach_tile_NE_3;
}

tilelayout beach_layout_NE_2 {
	0, 0: beach_tile_NE_2;
	0, 1: beach_tile_NE_3;
	0, 2: beach_tile_NE_2;
}

tilelayout beach_layout_NE_3 {
	0, 0: beach_tile_NE_2;
	0, 1: beach_tile_NE_3;
}

tilelayout beach_layout_SE_1 {
	0, 0: beach_tile_SE_3;
	1, 0: beach_tile_SE_2;
	2, 0: beach_tile_SE_1;
}

tilelayout beach_layout_SE_2 {
	0, 0: beach_tile_SE_3;
	1, 0: beach_tile_SE_1;
	2, 0: beach_tile_SE_2;
}

tilelayout beach_layout_SE_3 {
	0, 0: beach_tile_SE_3;
	1, 0: beach_tile_SE_2;
}

tilelayout beach_layout_NW_1 {
	0, 0: beach_tile_NW_1;
	1, 0: beach_tile_NW_2;
	2, 0: beach_tile_NW_3;
}

tilelayout beach_layout_NW_2 {
	0, 0: beach_tile_NW_3;
	1, 0: beach_tile_NW_2;
	2, 0: beach_tile_NW_3;
}

tilelayout beach_layout_NW_3 {
	1, 0: beach_tile_NW_2;
	2, 0: beach_tile_NW_1;
}

tilelayout beach_layout_SW_1 {
	0, 0: beach_tile_SW_1;
	0, 1: beach_tile_SW_2;
	0, 2: beach_tile_SW_3;
}

tilelayout beach_layout_SW_2 {
	0, 0: beach_tile_SW_2;
	0, 1: beach_tile_SW_1;
	0, 2: beach_tile_SW_3;
}

tilelayout beach_layout_SW_3 {
	0, 0: beach_tile_SW_3;
	0, 1: beach_tile_SW_2;
}

/* Tile Definitions */

// NE Tiles

item(FEAT_INDUSTRYTILES, beach_tile_NE_1) {
	property {
		substitute: 02;
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
	graphics {
		default: beach_sprite_NE_1;
		foundations: return CB_RESULT_NO_FOUNDATIONS;
		tile_check: beach_slope_NE_check;
	}
}

item(FEAT_INDUSTRYTILES, beach_tile_NE_2) {
	property {
		substitute: 02;
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
	graphics {
		default: beach_sprite_NE_2;
		foundations: return CB_RESULT_NO_FOUNDATIONS;
		tile_check: beach_slope_NE_check;
	}
}

item(FEAT_INDUSTRYTILES, beach_tile_NE_3) {
	property {
		substitute: 02;
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
	graphics {
		default: beach_sprite_NE_3;
		foundations: return CB_RESULT_NO_FOUNDATIONS;
		tile_check: beach_slope_NE_check;
	}
}

// SE Tiles

item(FEAT_INDUSTRYTILES, beach_tile_SE_1) {
	property {
		substitute: 02;
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
	graphics {
		default: beach_sprite_SE_1;
		foundations: return CB_RESULT_NO_FOUNDATIONS;
		tile_check: beach_slope_SE_check;
	}
}

item(FEAT_INDUSTRYTILES, beach_tile_SE_2) {
	property {
		substitute: 02;
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
	graphics {
		default: beach_sprite_SE_2;
		foundations: return CB_RESULT_NO_FOUNDATIONS;
		tile_check: beach_slope_SE_check;
	}
}

item(FEAT_INDUSTRYTILES, beach_tile_SE_3) {
	property {
		substitute: 02;
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
	graphics {
		default: beach_sprite_SE_3;
		foundations: return CB_RESULT_NO_FOUNDATIONS;
		tile_check: beach_slope_SE_check;
	}
}

// NW tiles

item(FEAT_INDUSTRYTILES, beach_tile_NW_1) {
	property {
		substitute: 02;
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
	graphics {
		default: beach_sprite_NW_1;
		foundations: return CB_RESULT_NO_FOUNDATIONS;
		tile_check: beach_slope_NW_check;
	}
}

item(FEAT_INDUSTRYTILES, beach_tile_NW_2) {
	property {
		substitute: 02;
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
	graphics {
		default: beach_sprite_NW_2;
		foundations: return CB_RESULT_NO_FOUNDATIONS;
		tile_check: beach_slope_NW_check;
	}
}

item(FEAT_INDUSTRYTILES, beach_tile_NW_3) {
	property {
		substitute: 02;
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
	graphics {
		default: beach_sprite_NW_3;
		foundations: return CB_RESULT_NO_FOUNDATIONS;
		tile_check: beach_slope_NW_check;
	}
}

// SW tiles

item(FEAT_INDUSTRYTILES, beach_tile_SW_1) {
	property {
		substitute: 02;
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
	graphics {
		default: beach_sprite_SW_1;
		foundations: return CB_RESULT_NO_FOUNDATIONS;
		tile_check: beach_slope_SW_check;
	}
}

item(FEAT_INDUSTRYTILES, beach_tile_SW_2) {
	property {
		substitute: 02;
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
	graphics {
		default: beach_sprite_SW_2;
		foundations: return CB_RESULT_NO_FOUNDATIONS;
		tile_check: beach_slope_SW_check;
	}
}

item(FEAT_INDUSTRYTILES, beach_tile_SW_3) {
	property {
		substitute: 02;
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
	graphics {
		default: beach_sprite_SW_3;
		foundations: return CB_RESULT_NO_FOUNDATIONS;
		tile_check: beach_slope_SW_check;
	}
}

/* Boosted production if Rum is supplied */
produce (produce_beach_boosted,
	[FOOD: 4; BEER: 4;],    // Consume
	[TOUR: 32;],            // Produce
	0                       // Don't run callback again
	)

/* Regular production */
produce (produce_beach,
	[FOOD: 4;],             // Consume
	[TOUR: 16;],            // Produce
	0                       // Don't run callback again
	)

/* Check for Rum for normal or boosted production */
switch (FEAT_INDUSTRIES, SELF, switch_produce_beach_boosted, incoming_cargo_waiting("BEER") >= 4) {1: produce_beach_boosted; produce_beach;}

/* Check for Food for any production */
switch (FEAT_INDUSTRIES, SELF, switch_produce_beach, (incoming_cargo_waiting("FOOD") >= 4)) {1: switch_produce_beach_boosted; switch_produce_idle;}

/* Consume extra Rum */
produce (produce_beach_rum_stockpile,
	[BEER: 1;],               // Consume
	[],                       // Produce
	1                         // Run callback again
	)

/* Should we consume extra Rum? */
switch (FEAT_INDUSTRIES, SELF, switch_beach_stockpile_rum, incoming_cargo_waiting("BEER") > 4096) {
	1: produce_beach_rum_stockpile;
	produce_none;
}

/* Consume extra Food */
produce (produce_beach_food_stockpile,
	[FOOD: 1;],               // Consume
	[],                       // Produce
	1                         // Run callback again
	)

/* Should we consume extra Food? */
switch (FEAT_INDUSTRIES, SELF, switch_beach_stockpile_food, incoming_cargo_waiting("FOOD") > 4096) {
	1: produce_beach_food_stockpile;
	switch_beach_stockpile_rum;
}

/* Construction check */
switch (FEAT_INDUSTRIES, SELF, loc_check_beach, IsBeingFunded() || (IsNearTown() && AvoidIndustryType(industry_beach, 128)))
	{1: return CB_RESULT_LOCATION_ALLOW; return CB_RESULT_LOCATION_DISALLOW;}

item(FEAT_INDUSTRIES, industry_beach, 15) {
	property {
		substitute: 0;
		name: string(STR_BEACH);
		nearby_station_name: string(STR_STATION, string(STR_TOWN), string(STR_BEACH));
		life_type: IND_LIFE_TYPE_ORGANIC;
		spec_flags: bitmask(IND_FLAG_BUILT_ON_WATER);
		cargo_types:[
			accept_cargo("FOOD"),
			accept_cargo("BEER"),
			produce_cargo("TOUR", 0),
			];
		layouts: [
			beach_layout_NE_1,
			beach_layout_NE_2,
			beach_layout_NE_3,
			beach_layout_SE_1,
			beach_layout_SE_2,
			beach_layout_SE_3,
			beach_layout_NW_1,
			beach_layout_NW_2,
			beach_layout_NW_3,
			beach_layout_SW_1,
			beach_layout_SW_2,
			beach_layout_SW_3,
		];
		
		prob_map_gen: 5;
		prob_in_game: 5;
		fund_cost_multiplier: 7;
		map_colour: 176;	
	}
	graphics {
		produce_256_ticks: switch_produce_beach;
		produce_cargo_arrival: switch_beach_stockpile_food;
        location_check: loc_check_beach;
		/* Don't allow any production changes */
		build_prod_change: 16; // 100% production
		monthly_prod_change: CB_RESULT_IND_PROD_NO_CHANGE;
		random_prod_change: CB_RESULT_IND_PROD_NO_CHANGE;
		extra_text_industry: string(STR_BEACH_HELPTEXT);
	}
}