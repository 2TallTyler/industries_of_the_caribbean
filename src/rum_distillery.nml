/* Begin Rum Distillery */

item (FEAT_INDUSTRYTILES, tile_rum_distillery_0)
{
	property {
		substitute: 39;
		override: 39;
		accepted_cargos: [[MOLS, 8], [PASS, 8]];
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
}

item (FEAT_INDUSTRYTILES, tile_rum_distillery_1)
{
	property {
		substitute: 40;
		override: 40;
		accepted_cargos: [[MOLS, 8], [PASS, 8]];
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
}

item (FEAT_INDUSTRYTILES, tile_rum_distillery_2)
{
	property {
		substitute: 41;
		override: 41;
		accepted_cargos: [[MOLS, 8], [PASS, 8]];
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
}

item (FEAT_INDUSTRYTILES, tile_rum_distillery_3)
{
	property {
		substitute: 42;
		override: 42;
		accepted_cargos: [[MOLS, 8], [PASS, 8]];
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
}

produce (produce_rum_distillery,
	[PASS: 1; MOLS: 1;],	// Consume
	[BEER: 1;],				// Produce
	1 						// Run callback again
	)
	
switch (FEAT_INDUSTRIES, SELF, switch_produce_rum_distillery, (incoming_cargo_waiting("PASS") > 0 && incoming_cargo_waiting("MOLS") > 0)) {
	1: produce_rum_distillery;
	switch_produce_idle;
}

/* Construction check */
switch (FEAT_INDUSTRIES, SELF, loc_check_rum_distillery, IsBeingFunded() || (!param_primary_only && IsNearTown() && TownHasSecondaryPopulation() && NoNearbyCompetitors(industry_rum_distillery, 128)))
	{1: return CB_RESULT_LOCATION_ALLOW; return CB_RESULT_LOCATION_DISALLOW;}

item (FEAT_INDUSTRIES, industry_rum_distillery, 11)
{
	property {
		substitute: INDUSTRYTYPE_TEMPERATE_FACTORY;
		name: string(STR_RUM_DISTILLERY);
		nearby_station_name: string(STR_STATION, string(STR_TOWN), string(STR_RUM_DISTILLERY));
		life_type: IND_LIFE_TYPE_PROCESSING;
		cargo_types: [
			accept_cargo("PASS"),
			accept_cargo("MOLS"),
			produce_cargo("BEER", 0)
		];
		prob_map_gen: (param_primary_only) ? 0 : 1;
		prob_in_game: 0;
		fund_cost_multiplier: 5; // 1.875 million GBP, twice Sugar Mill
		map_colour: 61;
	}
	graphics {
		location_check: loc_check_rum_distillery;
		produce_256_ticks: switch_produce_idle;
		produce_cargo_arrival: switch_produce_rum_distillery;
		/* Don't allow any production changes */
		monthly_prod_change: CB_RESULT_IND_PROD_NO_CHANGE;
		random_prod_change: CB_RESULT_IND_PROD_NO_CHANGE;
		extra_text_industry: string(STR_RUM_DISTILLERY_HELPTEXT);
		extra_text_fund: string(STR_RUM_DISTILLERY_FUNDTEXT);
		colour: (founder == FOUNDER_GAME) ? COLOUR_BROWN : founder_colour1;
	}
}