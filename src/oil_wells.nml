/* Begin Nickel Mine */


spritelayout sprlay_oil_wells_1_a { 
	ground		{sprite:2116;}
	building	{sprite:2174;}
}
spritelayout sprlay_oil_wells_1_b { 
	ground		{sprite:2116;}
	building	{sprite:2175;}
}
spritelayout sprlay_oil_wells_1_c { 
	ground		{sprite:2116;}
	building	{sprite:2176;}
}
spritelayout sprlay_oil_wells_1_d { 
	ground		{sprite:2116;}
	building	{sprite:2177;}
}
spritelayout sprlay_oil_wells_1_e { 
	ground		{sprite:2116;}
	building	{sprite:2178;}
}
spritelayout sprlay_oil_wells_1_f { 
	ground		{sprite:2116;}
	building	{sprite:2179;}
}

switch (FEAT_INDUSTRYTILES, SELF, oil_wells_tile_animation, animation_frame) {
	1:	sprlay_oil_wells_1_a;
	2:	sprlay_oil_wells_1_b;
	3:	sprlay_oil_wells_1_c;
	4:	sprlay_oil_wells_1_d;
	5:	sprlay_oil_wells_1_e;
	6:	sprlay_oil_wells_1_f;
	7:	sprlay_oil_wells_1_e;
	8:	sprlay_oil_wells_1_d;
	9:	sprlay_oil_wells_1_c;
	10:	sprlay_oil_wells_1_b;
	11:	sprlay_oil_wells_1_a;
	12:	sprlay_oil_wells_1_b;
	13:	sprlay_oil_wells_1_c;
	14:	sprlay_oil_wells_1_d;
	15:	sprlay_oil_wells_1_e;
	16:	sprlay_oil_wells_1_f;
	17:	sprlay_oil_wells_1_e;
	18:	sprlay_oil_wells_1_d;
	19:	sprlay_oil_wells_1_c;
	20:	sprlay_oil_wells_1_b;
	sprlay_oil_wells_1_a;
}

switch (FEAT_INDUSTRYTILES, SELF, oil_wells_tile_1_stop_anim, animation_frame) {
	1: return 11; // jump to the 'stop animation cycle' when triggered and currently animated
	2: return 12;
	3: return 13;
	4: return 14;
	5: return 15;
	6: return 16;
	7: return 17;
	8: return 18;
	9: return 19;
	10: return 20;
	return CB_RESULT_DO_NOTHING;
}
switch (FEAT_INDUSTRYTILES, SELF, oil_wells_tile_1_start_anim, animation_frame) {
	11: return 1;
	12: return 2;
	13: return 3;
	14: return 4;
	15: return 5;
	16: return 6;
	17: return 7;
	18: return 8;
	19: return 9;
	20: return 10;
	return CB_RESULT_START_ANIMATION;
}

random_switch (FEAT_INDUSTRYTILES, SELF, oil_wells_tile_1_random_anim_trigger_switch, bitmask(TRIGGER_INDUSTRYTILE_TILELOOP)) {
	1: return oil_wells_tile_1_stop_anim;
	1: return oil_wells_tile_1_start_anim;
}

switch (FEAT_INDUSTRYTILES, SELF, oil_wells_tile_1_next_frame_switch, animation_frame) {
	10: return 1;
	11: return CB_RESULT_STOP_ANIMATION; // Don't actually stop animation, just keep looping the same frame over and over. // CB_RESULT_STOP_ANIMATION
	20: return 11;
	return CB_RESULT_NEXT_FRAME;
}

switch (FEAT_INDUSTRYTILES, SELF, oil_wells_tile_1_graphics_switch, construction_state) {
	1: sprlay_oil_wells_1_a;
	2: sprlay_oil_wells_1_a;
	oil_wells_tile_animation;
}
item (FEAT_INDUSTRYTILES, ind_tile_oil_wells) {
	property {
		substitute:				02; 
		animation_info:			[ANIMATION_LOOPING, 20];
		animation_speed:		3;
		animation_triggers:		bitmask(ANIM_TRIGGER_INDTILE_TILE_LOOP);
		special_flags:			bitmask(INDTILE_FLAG_RANDOM_ANIMATION, INDTILE_FLAG_ACCEPT_ALL);
		land_shape_flags:		bitmask(LSF_ONLY_ON_FLAT_LAND);
	}
	graphics {
		anim_control: oil_wells_tile_1_random_anim_trigger_switch;
		anim_next_frame: oil_wells_tile_1_next_frame_switch;
		random_trigger: oil_wells_tile_1_random_anim_trigger_switch;
			oil_wells_tile_1_graphics_switch;
	}
}

tilelayout industry_layout_oil_wells_1 {
	0,0:	ind_tile_oil_wells;		0,2:	ind_tile_oil_wells;		0,4:	ind_tile_oil_wells;
	2,0:	ind_tile_oil_wells;		2,2:	ind_tile_oil_wells;		2,4:	ind_tile_oil_wells;
}

tilelayout industry_layout_oil_wells_2 {
	0,0:	ind_tile_oil_wells;		0,2:	ind_tile_oil_wells;	
	2,0:	ind_tile_oil_wells;		2,2:	ind_tile_oil_wells;
	4,0:	ind_tile_oil_wells;		4,2:	ind_tile_oil_wells;
}

/* FIXME: Should this industry be unlocked and spawn by itself, be prospected by the player, or appear at map generation? */
//switch (FEAT_INDUSTRIES, SELF, switch_unlock_oil_wells, (getbits(extra_callback_info2, 0, 8) != IND_CREATION_GENERATION) && industry_count(industry_oil_refinery, -1) > 0) {1: return 1; return 0;}

/* Boosted production: 48 Workers, 48 units of Pipe, and 48 units of Machinery. Extra workers are consumed so they don't build up */
produce (produce_oil_wells_boosted,
	[PIPE: 6; PASS: max((incoming_cargo_waiting("PASS") / 8), 6); ENSP: 6;],	// Consume
	[NKOR: 40; COBL: 10;],														// Produce
	0 																			// Don't run callback again
	)

/* Regular production: 48 Workers and 48 units of Pipe. Extra workers are consumed so they don't build up */
produce (produce_oil_wells,
	[PIPE: 6; PASS: max((incoming_cargo_waiting("PASS") / 8), 6);],	// Consume
	[NKOR: 20; COBL: 5;],											// Produce
	0 																// Don't run callback again
	)

/* Check for Machinery for boosted production */
switch (FEAT_INDUSTRIES, SELF, switch_produce_oil_wells_boosted, incoming_cargo_waiting("ENSP") >= 6) {1: produce_oil_wells_boosted; produce_oil_wells;}	

/* Check for sufficient Workers and Fuel to begin production */
switch (FEAT_INDUSTRIES, SELF, switch_produce_oil_wells, (incoming_cargo_waiting("FUEL") >= 6 && incoming_cargo_waiting("PASS") >= 6)) {1: switch_produce_oil_wells_boosted; switch_produce_idle;}

item (FEAT_INDUSTRIES, industry_oil_wells, 16)
{
	property {
		substitute: INDUSTRYTYPE_OIL_WELLS;
		name: string(STR_OIL_WELLS);
		nearby_station_name: string(STR_STATION, string(STR_TOWN), string(STR_OIL_WELLS));
		life_type: IND_LIFE_TYPE_EXTRACTIVE;
		layouts: [
			industry_layout_oil_wells_1,
			industry_layout_oil_wells_2,
		];
		cargo_types: [
			accept_cargo("PASS"),
			accept_cargo("PIPE"),
			accept_cargo("ENSP"),
			produce_cargo("OIL_", 0)
		];
		prob_map_gen: 1; // FIXME: Adjust as necessary
		prob_in_game: 0;
		fund_cost_multiplier: 5;
		map_colour: 171;
	}
	graphics {
		produce_256_ticks: switch_produce_oil_wells;
		//construction_probability: switch_unlock_oil_wells;
		/* Don't allow any production changes */
		monthly_prod_change: CB_RESULT_IND_PROD_NO_CHANGE;
		random_prod_change: CB_RESULT_IND_PROD_NO_CHANGE;
		extra_text_industry: string(STR_OIL_WELLS_HELPTEXT);
	}
}