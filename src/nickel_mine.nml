/* Begin Nickel Mine */

item (FEAT_INDUSTRYTILES, tile_nickel_mine_0)
{
	property {
		substitute: 47;
		override: 47;
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
}

item (FEAT_INDUSTRYTILES, tile_nickel_mine_1)
{
	property {
		substitute: 48;
		override: 48;
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
}

item (FEAT_INDUSTRYTILES, tile_nickel_mine_2)
{
	property {
		substitute: 49;
		override: 49;
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
}

item (FEAT_INDUSTRYTILES, tile_nickel_mine_3)
{
	property {
		substitute: 50;
		override: 50;
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
}

item (FEAT_INDUSTRYTILES, tile_nickel_mine_4)
{
	property {
		substitute: 51;
		override: 51;
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
	}
}

/* Nickel Mines must be at least height 2, no max limit. */
switch (FEAT_INDUSTRIES, SELF, loc_check_nickel_mine, IndustryElevationCheck(2, 255)) {1: return CB_RESULT_LOCATION_ALLOW; return string(STR_ERR_NICKEL_MINE_LOCATION);}

/* Boosted production: 48 units of Fuel and 48 units of Machinery. */
produce (produce_nickel_mine_boosted,
	[FUEL: 6; ENSP: 6;],      // Consume
	[NKOR: 40; COBL: 10;],    // Produce
	0                         // Don't run callback again
	)

/* Regular production: 48 units of Fuel. */
produce (produce_nickel_mine,
	[FUEL: 6;],               // Consume
	[NKOR: 20; COBL: 5;],     // Produce
	0                         // Don't run callback again
	)

/* Check for Machinery for boosted production */
switch (FEAT_INDUSTRIES, SELF, switch_produce_nickel_mine_boosted, incoming_cargo_waiting("ENSP") >= 6) {1: produce_nickel_mine_boosted; produce_nickel_mine;}	

/* Check for sufficient Fuel to begin production */
switch (FEAT_INDUSTRIES, SELF, switch_produce_nickel_mine, (incoming_cargo_waiting("FUEL") >= 6)) {1: switch_produce_nickel_mine_boosted; produce_none;}

/* Consume extra Machinery */
produce (produce_nickel_mine_machinery_stockpile,
	[ENSP: 1;],               // Consume
	[],                       // Produce
	1                         // Run callback again
	)

/* Should we consume extra Machinery? */
switch (FEAT_INDUSTRIES, SELF, switch_nickel_mine_stockpile_machinery, incoming_cargo_waiting("ENSP") > 4096) {
	1: produce_nickel_mine_machinery_stockpile;
	produce_none;
}

/* Consume extra Fuel */
produce (produce_nickel_mine_fuel_stockpile,
	[FUEL: 1;],               // Consume
	[],                       // Produce
	1                         // Run callback again
	)

/* Should we consume extra Fuel? */
switch (FEAT_INDUSTRIES, SELF, switch_nickel_mine_stockpile_fuel, incoming_cargo_waiting("FUEL") > 4096) {
	1: produce_nickel_mine_fuel_stockpile;
	switch_nickel_mine_stockpile_machinery;
}

item (FEAT_INDUSTRIES, industry_nickel_mine, 6)
{
	property {
		substitute: INDUSTRYTYPE_COPPER_ORE_MINE;
		name: string(STR_NICKEL_MINE);
		nearby_station_name: string(STR_STATION, string(STR_TOWN), string(STR_NICKEL_MINE));
		life_type: IND_LIFE_TYPE_EXTRACTIVE;
		cargo_types: [
			accept_cargo("FUEL"),
			accept_cargo("ENSP"),
			produce_cargo("NKOR", 0), // 3
			produce_cargo("COBL", 0)  // 1
		];
		prob_map_gen: 4;
		prob_in_game: 0;
		fund_cost_multiplier: 5;
		map_colour: 8;
	}
	graphics {
		produce_256_ticks: switch_produce_nickel_mine;
		produce_cargo_arrival: switch_nickel_mine_stockpile_fuel;
		location_check: loc_check_nickel_mine;
		/* Don't allow any production changes */
		monthly_prod_change: CB_RESULT_IND_PROD_NO_CHANGE;
		random_prod_change: CB_RESULT_IND_PROD_NO_CHANGE;
		extra_text_industry: string(STR_NICKEL_MINE_HELPTEXT);
	}
}