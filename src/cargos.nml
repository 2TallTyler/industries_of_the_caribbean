
/* Begin Cargos */

cargotable {
	/* Town/passenger cargos */
	PASS, MAIL, TOUR,
	
	/* Primary products */
	JAVA, SGCN, TBCO, WOOD, OIL_, NKOR,
	
	/* Secondary products */
	SUGR, MOLS, CIGR, BEER, FOOD, CHEM, RFPR, FUEL, NICK, COBL, PIPE,
	
	/* Boost Supplies */
	FERT, ENSP
}

// Replace passengers, keep original ID. Use cargo label "PASS" to avoid breaking vehicle refits.
item (FEAT_CARGOS, cargo_workers, 0x00) {
	property {
		number:						0x00;
		sprite:						4297;
		type_name:					string(STR_CARGO_NAME_WORKERS);
		unit_name:					string(STR_CARGO_SINGULAR_WORKERS);
		type_abbreviation:			string(STR_CARGO_ABBREV_WORKERS);
		weight:						0.0625;
		is_freight:					0;
		cargo_classes:				bitmask(CC_PASSENGERS);
		cargo_label:				"PASS";
		town_growth_effect:			TOWNGROWTH_PASSENGERS;
		town_growth_multiplier:		1.0;
		units_of_cargo:				string(STR_CARGO_QUANTITY_WORKERS);
		items_of_cargo:				string(STR_CARGO_QUANTITY_WORKERS);
		penalty_lowerbound:			10;
		single_penalty_length:		24;
		price_factor:				105; // FIRS: 105
		capacity_multiplier:		4;
		station_list_colour:		152;
		cargo_payment_list_colour:	152;
	}
}

// Uses Coal ID
item (FEAT_CARGOS, cargo_tourists, 0x01) {
	property {
		number:						0x01;
		sprite:						4297;
		type_name:					string(STR_CARGO_NAME_TOURISTS);
		unit_name:					string(STR_CARGO_SINGULAR_TOURISTS);
		type_abbreviation:			string(STR_CARGO_ABBREV_TOURISTS);
		weight:						0.0625;
		is_freight:					0;
		cargo_classes:				bitmask(CC_PASSENGERS);
		cargo_label:				"TOUR";
		town_growth_effect:			TOWNGROWTH_WATER;
		town_growth_multiplier:		1.0;
		units_of_cargo:				string(STR_CARGO_QUANTITY_TOURISTS);
		items_of_cargo:				string(STR_CARGO_QUANTITY_TOURISTS);
		penalty_lowerbound:			10;
		single_penalty_length:		24;
		price_factor:				175; // original: 175
		capacity_multiplier:		4;
		station_list_colour:		176;
		cargo_payment_list_colour:	176;
	}
}

// Original ID, required for house compatibility.
item (FEAT_CARGOS, cargo_mail, 0x02) {
	property {
		number:						0x02;
		sprite:						4299;
		type_name:					TTD_STR_CARGO_PLURAL_MAIL;
		unit_name:					TTD_STR_CARGO_SINGULAR_MAIL;
		type_abbreviation:			TTD_STR_ABBREV_MAIL;
		weight:						0.25;
		is_freight:					0;
		cargo_classes:				bitmask(CC_MAIL);
		cargo_label:				"MAIL";
		town_growth_effect:			TOWNGROWTH_MAIL;
		town_growth_multiplier:		1.0;
		units_of_cargo:				TTD_STR_BAGS;
		items_of_cargo:				TTD_STR_QUANTITY_MAIL;
		penalty_lowerbound:			6;
		single_penalty_length:		24;
		price_factor:				167; // FIRS: 167
		capacity_multiplier:		2;
		station_list_colour:		23;
		cargo_payment_list_colour:	23;	
	}
}

// Uses Oil ID
item (FEAT_CARGOS, cargo_coffee, 0x03) {
	property {
		number:						0x03;
		sprite:						4308;
		type_name:					string(STR_CARGO_NAME_COFFEE);
		unit_name:					string(STR_CARGO_NAME_COFFEE);
		type_abbreviation:			string(STR_CARGO_ABBREV_COFFEE);
		weight:						0.25;
		is_freight:					1;
		cargo_classes:				bitmask(CC_EXPRESS, CC_PIECE_GOODS);
		cargo_label:				"JAVA";
		town_growth_effect:			TOWNGROWTH_NONE;
		town_growth_multiplier:		1;
		units_of_cargo:				TTD_STR_TONS;
		items_of_cargo:				string(STR_CARGO_QUANTITY_COFFEE);
		penalty_lowerbound:			16;
		single_penalty_length:		64;
		capacity_multiplier:		1;
		price_factor:				193; // FIRS: 173
		station_list_colour:		63;
		cargo_payment_list_colour:	63;
	}
}

// Rum uses Goods ID for cargo acceptance with old houses. ITL houses do not accept rum -- it must be exported.
item (FEAT_CARGOS, cargo_rum, 0x05) {
	property {
		number:						0x05;
		sprite:						4317;
		type_name:					string(STR_CARGO_NAME_RUM);
		unit_name:					string(STR_CARGO_NAME_RUM);
		type_abbreviation:			string(STR_CARGO_ABBREV_RUM);
		weight:						0.5;
		is_freight:					1;
		cargo_classes:				bitmask(CC_EXPRESS, CC_PIECE_GOODS);
		cargo_label:				"BEER";
		town_growth_effect:			TOWNGROWTH_WATER;
		town_growth_multiplier:		1.0;
		units_of_cargo:				TTD_STR_TONS;
		items_of_cargo:				string(STR_CARGO_QUANTITY_RUM);
		penalty_lowerbound:			9;
		single_penalty_length:		36;
		price_factor:				166; // FIRS: 166 (Alcohol)
		capacity_multiplier:		1;
		station_list_colour:		61;
		cargo_payment_list_colour:	61;
	}
}

// Sugarcane in 0x06 Grain
item (FEAT_CARGOS, cargo_sugarcane, 0x06) {
	property {
		number:						0x06;
		sprite:						4309;
		type_name:					string(STR_CARGO_NAME_SUGARCANE);
		unit_name:					string(STR_CARGO_NAME_SUGARCANE);
		type_abbreviation:			string(STR_CARGO_ABBREV_SUGARCANE);
		weight:						1;
		is_freight:					1;
		cargo_classes:				bitmask(CC_BULK, CC_NON_POURABLE);
		cargo_label:				"SGCN";
		town_growth_effect:			TOWNGROWTH_NONE;
		town_growth_multiplier:		1;
		units_of_cargo:				TTD_STR_TONS;
		items_of_cargo:				string(STR_CARGO_QUANTITY_SUGARCANE);
		penalty_lowerbound:			5;
		single_penalty_length:		30;
		price_factor:				99; // FIRS: 99
		capacity_multiplier:		1;
		station_list_colour:		94;
		cargo_payment_list_colour:	94;
	}
}

// Sugar in 0x07 Wood
item (FEAT_CARGOS, cargo_sugar, 0x07) {
	property {
		number:						0x07;
		sprite:						4316;
		type_name:					TTD_STR_CARGO_PLURAL_SUGAR;
		unit_name:					TTD_STR_CARGO_SINGULAR_SUGAR;
		type_abbreviation:			TTD_STR_ABBREV_SUGAR;
		weight:						1;
		is_freight:					1;
		cargo_classes:				bitmask(CC_BULK, CC_COVERED);
		cargo_label:				"SUGR";
		town_growth_effect:			TOWNGROWTH_NONE;
		town_growth_multiplier:		1;
		units_of_cargo:				TTD_STR_TONS;
		items_of_cargo:				TTD_STR_QUANTITY_SUGAR;
		penalty_lowerbound:			16;
		single_penalty_length:		64;
		price_factor:				102; // original: 102
		capacity_multiplier:		1;
		station_list_colour:		15;
		cargo_payment_list_colour:	15;
	}
}

// Tobacco in 0x08 Iron Ore
item (FEAT_CARGOS, cargo_tobacco, 0x08) {
	property {
		number:						0x08;
		sprite:						4309;
		type_name:					string(STR_CARGO_NAME_TOBACCO);
		unit_name:					string(STR_CARGO_NAME_TOBACCO);
		type_abbreviation:			string(STR_CARGO_ABBREV_TOBACCO);
		weight:						1;
		is_freight:					1;
		cargo_classes:				bitmask(CC_BULK, CC_NON_POURABLE);
		cargo_label:				"TBCO";
		town_growth_effect:			TOWNGROWTH_NONE;
		town_growth_multiplier:		1;
		items_of_cargo:				string(STR_CARGO_QUANTITY_TOBACCO);
		units_of_cargo:				TTD_STR_TONS;
		penalty_lowerbound:			5;
		single_penalty_length:		30;
		price_factor:				116; // original: 116
		capacity_multiplier:		1;
		station_list_colour:		57;
		cargo_payment_list_colour:	57;
	}
}

// Molasses in 0x0A Diamonds
item (FEAT_CARGOS, cargo_molasses, 0x0A) {
	property {
		number:						0x0A;
		sprite:						4300;
		type_name:					string(STR_CARGO_NAME_MOLASSES);
		unit_name:					string(STR_CARGO_NAME_MOLASSES);
		type_abbreviation:			string(STR_CARGO_ABBREV_MOLASSES);
		weight:						1;
		is_freight:					1;
		cargo_classes:				bitmask(CC_LIQUID);
		cargo_label:				"MOLS";
		town_growth_effect:			TOWNGROWTH_NONE;
		town_growth_multiplier:		1;
		units_of_cargo:				TTD_STR_TONS;
		items_of_cargo:				string(STR_CARGO_QUANTITY_MOLASSES);
		penalty_lowerbound:			40;
		single_penalty_length:		255;
		price_factor:				96; // original: 96
		capacity_multiplier:		1;
		station_list_colour:		106;
		cargo_payment_list_colour:	106;
	}
}

// Cigars in 0x0B Paper
item (FEAT_CARGOS, cargo_cigars, 0x0B) {
	property {
		number:						0x0B;
		sprite:						4317;
		type_name:					string(STR_CARGO_NAME_CIGARS);
		unit_name:					string(STR_CARGO_NAME_CIGARS);
		type_abbreviation:			string(STR_CARGO_ABBREV_CIGARS);
		weight:						0.5;
		is_freight:					1;
		cargo_classes:				bitmask(CC_EXPRESS, CC_PIECE_GOODS);
		cargo_label:				"CIGR";
		town_growth_effect:			TOWNGROWTH_NONE;
		town_growth_multiplier:		1.0;
		units_of_cargo:				TTD_STR_TONS;
		items_of_cargo:				string(STR_CARGO_QUANTITY_CIGARS);
		penalty_lowerbound:			10;
		single_penalty_length:		56;
		price_factor:				163; // original: 163
		capacity_multiplier:		1;
		station_list_colour:		36;
		cargo_payment_list_colour:	36;
	}
}

// Original ID, required for compatibility with older NewGRF house sets which hard-code cargo acceptance to cargo IDs rather than "FOOD"
item (FEAT_CARGOS, cargo_food, 0x0C) {
	property {
		number:						0x0C;
		sprite:						4312;
		type_name:					TTD_STR_CARGO_PLURAL_FOOD;
		unit_name:					TTD_STR_CARGO_SINGULAR_FOOD;
		type_abbreviation:			TTD_STR_ABBREV_FOOD;
		weight:						1;
		is_freight:					1;
		cargo_classes:				bitmask(CC_REFRIGERATED, CC_EXPRESS);
		cargo_label:				"FOOD";
		town_growth_effect:			TOWNGROWTH_FOOD;
		town_growth_multiplier:		1.0;
		units_of_cargo:				TTD_STR_TONS;
		items_of_cargo:				TTD_STR_QUANTITY_FOOD;
		penalty_lowerbound:			0;
		single_penalty_length:		24;
		price_factor:				158; // FIRS: 158
		capacity_multiplier:		1;
		station_list_colour:		48;
		cargo_payment_list_colour:	48;
	}
}

// Oil in 0X0D Fruit
item (FEAT_CARGOS, cargo_oil, 0x0D) {
	property {
		number:						0x0D;
		sprite:						4300;
		type_name:					TTD_STR_CARGO_PLURAL_OIL;
		unit_name:					TTD_STR_CARGO_SINGULAR_OIL;
		type_abbreviation:			TTD_STR_ABBREV_OIL;
		weight:						0.9;
		is_freight:					1;
		cargo_classes:				bitmask(CC_LIQUID);
		cargo_label:				"OIL_";
		town_growth_effect:			TOWNGROWTH_NONE;
		town_growth_multiplier:		0;
		units_of_cargo:				TTD_STR_TONS;
		items_of_cargo:				TTD_STR_TONS;
		penalty_lowerbound:			30;
		single_penalty_length:		255;
		station_list_colour:		171;
		cargo_payment_list_colour:	171;
		price_factor:				101; // FIRS: 101
		capacity_multiplier:		1;		
	}
}

// Fuel in 0x0E Copper Ore
item (FEAT_CARGOS, cargo_fuel, 0x0E) {
	property {
		number:						0x0E;
		sprite:						4300;
		type_name:					string(STR_CARGO_NAME_FUEL);
		unit_name:					string(STR_CARGO_NAME_FUEL);
		type_abbreviation:			string(STR_CARGO_ABBREV_FUEL);
		weight:						0.8;
		is_freight:					1;
		cargo_classes:				bitmask(CC_LIQUID);
		cargo_label:				"FUEL";
		town_growth_effect:			TOWNGROWTH_NONE;
		town_growth_multiplier:		0;
		units_of_cargo:				TTD_STR_TONS;
		items_of_cargo:				string(STR_CARGO_QUANTITY_FUEL);
		penalty_lowerbound:			32;
		single_penalty_length:		44;
		price_factor:				120; // original: 120
		capacity_multiplier:		1;
		station_list_colour:		173;
		cargo_payment_list_colour:	173;
	}
}

// Chemicals in 0x0F Water
item (FEAT_CARGOS, cargo_chemicals, 0x0F) {
	property {
		number:						0x0F;
		sprite:						4314;
		type_name:					string(STR_CARGO_NAME_CHEMICALS);
		unit_name:					string(STR_CARGO_NAME_CHEMICALS);
		type_abbreviation:			string(STR_CARGO_ABBREV_CHEMICALS);
		weight:						1.2;
		is_freight:					1;
		cargo_classes:				bitmask(CC_LIQUID, CC_POWDERIZED);
		cargo_label:				"RFPR";
		town_growth_effect:			TOWNGROWTH_NONE;
		town_growth_multiplier:		1.0;
		units_of_cargo:				TTD_STR_TONS;
		items_of_cargo:				string(STR_CARGO_QUANTITY_CHEMICALS);
		penalty_lowerbound:			20;
		single_penalty_length:		255;
		price_factor:				115; // FIRS: 115
		capacity_multiplier:		1;
		station_list_colour:		175;
		cargo_payment_list_colour:	175;		
	}
}

// Pipe in 0x10 Rubber
item (FEAT_CARGOS, cargo_pipe, 0x10) {
	property {
		number:						0x10;
		sprite:						4306;
		type_name:					string(STR_CARGO_NAME_PIPE);
		unit_name:					string(STR_CARGO_NAME_PIPE);
		type_abbreviation:			string(STR_CARGO_ABBREV_PIPE);
		weight:						1;
		is_freight:					1;
		cargo_classes:				bitmask(CC_PIECE_GOODS);
		cargo_label:				"PIPE";
		town_growth_effect:			TOWNGROWTH_NONE;
		town_growth_multiplier:		1.0;
		units_of_cargo:				TTD_STR_TONS;
		items_of_cargo:				string(STR_CARGO_QUANTITY_PIPE);
		penalty_lowerbound:			30;
		single_penalty_length:		42;
		price_factor:				144; // FIRS: 144
		capacity_multiplier:		1;
		station_list_colour:		132;
		cargo_payment_list_colour:	132;
	}
}

// Nickel Ore in 0x11 Sugar
item (FEAT_CARGOS, cargo_nickel_ore, 0x11) {
	property {
		number:						0x11;
		sprite:						4298;
		type_name:					string(STR_CARGO_NAME_NICKEL_ORE);
		unit_name:					string(STR_CARGO_NAME_NICKEL_ORE);
		type_abbreviation:			string(STR_CARGO_ABBREV_NICKEL_ORE);
		weight:						1;
		is_freight:					1;
		cargo_classes:				bitmask(CC_BULK);
		cargo_label:				"NKOR";
		town_growth_effect:			TOWNGROWTH_NONE;
		town_growth_multiplier:		1;
		units_of_cargo:				TTD_STR_TONS;
		items_of_cargo:				string(STR_CARGO_QUANTITY_NICKEL_ORE);
		penalty_lowerbound:			30;
		single_penalty_length:		255;
		price_factor:				89; // original: 89
		capacity_multiplier:		1;
		station_list_colour:		8;
		cargo_payment_list_colour:	8;
	}
}

// Nickel in 0x12 Toys
item (FEAT_CARGOS, cargo_nickel, 0x12) {
	property {
		number:						0x12;
		sprite:						4306;
		type_name:					string(STR_CARGO_NAME_NICKEL);
		unit_name:					string(STR_CARGO_NAME_NICKEL);
		type_abbreviation:			string(STR_CARGO_ABBREV_NICKEL);
		weight:						1;
		is_freight:					1;
		cargo_classes:				bitmask(CC_PIECE_GOODS);
		cargo_label:				"NICK";
		town_growth_effect:			TOWNGROWTH_NONE;
		town_growth_multiplier:		1;
		units_of_cargo:				TTD_STR_TONS;
		items_of_cargo:				string(STR_CARGO_QUANTITY_NICKEL);
		penalty_lowerbound:			15;
		single_penalty_length:		255;
		price_factor:				141; // original: 141
		capacity_multiplier:		1;
		station_list_colour:		11;
		cargo_payment_list_colour:	11;
	}
}

// Cobalt in 0x13 Batteries
item (FEAT_CARGOS, cargo_cobalt, 0x13) {
	property {
		number:						0x13;
		sprite:						4311;
		type_name:					string(STR_CARGO_NAME_COBALT);
		unit_name:					string(STR_CARGO_NAME_COBALT);
		type_abbreviation:			string(STR_CARGO_ABBREV_COBALT);
		weight:						1;
		is_freight:					1;
		cargo_classes:				bitmask(CC_PIECE_GOODS);
		cargo_label:				"COBL";
		town_growth_effect:			TOWNGROWTH_NONE;
		town_growth_multiplier:		1;
		units_of_cargo:				TTD_STR_TONS;
		items_of_cargo:				string(STR_CARGO_QUANTITY_COBALT);
		penalty_lowerbound:			30;
		single_penalty_length:		255;
		price_factor:				162; // original: 162
		capacity_multiplier:		1;
		station_list_colour:		158;
		cargo_payment_list_colour:	158;
	}
}

// Fertilizer in 0x14 Sweets
item (FEAT_CARGOS, cargo_fertilizer, 0x14) {
	property {
		number:						0x14;
		sprite:						4320;
		type_name:					string(STR_CARGO_NAME_FERTILIZER);
		unit_name:					string(STR_CARGO_NAME_FERTILIZER);
		type_abbreviation:			string(STR_CARGO_ABBREV_FERTILIZER);
		weight:						1;
		is_freight:					1;
		cargo_classes:				bitmask(CC_PIECE_GOODS, CC_BULK, CC_COVERED);
		cargo_label:				"FERT";
		town_growth_effect:			TOWNGROWTH_NONE;
		town_growth_multiplier:		1;
		units_of_cargo:				TTD_STR_TONS;
		items_of_cargo:				string(STR_CARGO_QUANTITY_FERTILIZER);
		penalty_lowerbound:			22;
		single_penalty_length:		44;
		price_factor:				123; // original: 123
		capacity_multiplier:		1;
		station_list_colour:		118;
		cargo_payment_list_colour:	118;
	}
}

// Machinery in 0x15 Toffee
item (FEAT_CARGOS, cargo_machinery, 0x15) {
	property {
		number:						0x15;
		sprite:						4302;
		type_name:					string(STR_CARGO_NAME_MACHINERY);
		unit_name:					string(STR_CARGO_NAME_MACHINERY);
		type_abbreviation:			string(STR_CARGO_ABBREV_MACHINERY);
		weight:						0.65;
		is_freight:					1;
		cargo_classes:				bitmask(CC_EXPRESS, CC_PIECE_GOODS);
		cargo_label:				"ENSP";
		town_growth_effect:			TOWNGROWTH_NONE;
		town_growth_multiplier:		1;
		units_of_cargo:				TTD_STR_TONS;
		items_of_cargo:				string(STR_CARGO_QUANTITY_MACHINERY);
		penalty_lowerbound:			2;
		single_penalty_length:		32;
		price_factor:				172; // FIRS: 172
		capacity_multiplier:		1;
		station_list_colour:		165;
		cargo_payment_list_colour:	165;
	}
}
